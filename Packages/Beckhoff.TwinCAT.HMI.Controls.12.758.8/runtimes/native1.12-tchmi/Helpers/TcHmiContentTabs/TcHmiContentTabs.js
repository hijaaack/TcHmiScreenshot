var TcHmi;!function(TcHmi){!function(Controls){!function(Helpers){class ContentTabs extends HTMLElement{constructor(){super(),this.__tabs=new Map,this.__tabChangeCallbacks=new Helpers.CallbackManager}connectedCallback(){this.__updateLinksAndContents(),this.__findActiveTab(),this.__addEvents(),this.openTab()}disconnectedCallback(){this.__removeEvents()}addContentTab(name,link,content){if(this.__tabs.has(name))return void TcHmi.Log.warnEx(`ContentTab with the name '${name}' already exists.`);const tabToAdd={disabled:link.hasAttribute("disabled")||content.hasAttribute("disabled"),link:link,content:content,openTabHandler:this.openTab.bind(this,name)};link.setAttribute("ref",name),content.setAttribute("name",name),tabToAdd.disabled?(link.setAttribute("disabled",""),content.setAttribute("disabled","")):link.addEventListener("click",tabToAdd.openTabHandler);this.__getTabLinksWrapper().append(link);this.__getTabContentsWrapper().append(content),this.__tabs.set(name,tabToAdd)}removeContentTab(name){const tabToRemove=this.__tabs.get(name);tabToRemove?(tabToRemove.link.remove(),tabToRemove.content.remove(),tabToRemove.link.removeEventListener("click",tabToRemove.openTabHandler),this.__tabs.delete(name)):TcHmi.Log.warnEx(`No ContenTab with the name '${name}' found.`)}openTab(nameOfTabToOpen){if(!this.isConnected)return void(nameOfTabToOpen&&(this.__activeTab=nameOfTabToOpen));if(!nameOfTabToOpen&&!(nameOfTabToOpen=this.__activeTab)&&([nameOfTabToOpen]=this.__tabs.keys(),!nameOfTabToOpen))return void TcHmi.Log.warnEx("No valid tab name.");const tabToOpen=this.__tabs.get(nameOfTabToOpen);if(tabToOpen)if(tabToOpen.link.hasAttribute("disabled"))TcHmi.Log.errorEx("You tried to open an disabled tab. Please enable tab first.");else{for(const[tabName,tab]of this.__tabs)tabName!==nameOfTabToOpen&&(tab.link.removeAttribute("active"),tab.content.removeAttribute("active"));tabToOpen.link.setAttribute("active",""),tabToOpen.content.setAttribute("active",""),this.__activeTab=nameOfTabToOpen,this.__tabChangeCallbacks.trigger(nameOfTabToOpen)}else TcHmi.Log.errorEx(`No tab called '${nameOfTabToOpen}' found.`)}getTab(tabName){return this.__tabs.get(tabName)}get activeTab(){return this.__activeTab}enableTab(tabName){const tab=this.__tabs.get(tabName);tab?(tab.link.removeAttribute("disabled"),tab.content.removeAttribute("disabled"),tab.link.addEventListener("click",tab.openTabHandler)):TcHmi.Log.error(`No tab with name ${tabName} found.`)}disableTab(tabName){const tab=this.__tabs.get(tabName);tab?(this.__activeTab===tabName&&TcHmi.Log.error("You tried to disable an active tab. Please make this tab not active first."),tab.link.setAttribute("disabled",""),tab.content.setAttribute("disabled",""),tab.link.removeEventListener("click",tab.openTabHandler)):TcHmi.Log.error(`No tab with name ${tabName} found.`)}useMaxContent(){this.__getTabContentsWrapper().setAttribute("use-max-content","")}doNotUseMaxContent(){this.__getTabContentsWrapper().removeAttribute("use-max-content")}addTabChangeCallback(cb){this.__tabChangeCallbacks.add(cb)}removeTabChangeCallback(cb){this.__tabChangeCallbacks.remove(cb)}__getTabLinksWrapper(){let tabLinksWrapper=this.querySelector("tchmi-tab-links");return tabLinksWrapper||(tabLinksWrapper=document.createElement("tchmi-tab-links"),this.append(tabLinksWrapper)),tabLinksWrapper}__getTabContentsWrapper(){let tabContentsWrapper=this.querySelector("tchmi-tab-contents");return tabContentsWrapper||(tabContentsWrapper=document.createElement("tchmi-tab-contents"),this.append(tabContentsWrapper)),tabContentsWrapper}__updateLinksAndContents(){let tabLinksByName=new Map;const tabLinksWrapper=this.__getTabLinksWrapper(),tabContentsWrapper=this.__getTabContentsWrapper(),tabLinks=tabLinksWrapper.querySelectorAll("tchmi-tab-link");for(const tabLink of tabLinks){const tabRef=tabLink.getAttribute("ref");tabRef?tabLinksByName.set(tabRef,tabLink):TcHmi.Log.errorEx("Tab link has no attribute 'ref'.")}this.__tabs.clear();const tabContents=tabContentsWrapper.querySelectorAll("tchmi-tab-content");for(const tabContent of tabContents){const tabName=tabContent.getAttribute("name");if(!tabName){TcHmi.Log.errorEx("Tab content has no attribute 'name'.");continue}const tabLinkOfContent=tabLinksByName.get(tabName);if(!tabLinkOfContent){TcHmi.Log.errorEx(`No tab link found for content '${tabName}'.`);continue}const tab={link:tabLinkOfContent,content:tabContent,openTabHandler:this.openTab.bind(this,tabName),disabled:tabLinkOfContent.hasAttribute("disabled")||tabContent.hasAttribute("disabled")};this.__tabs.set(tabName,tab),tab.disabled&&(tab.link.setAttribute("disabled",""),tab.content.setAttribute("disabled",""))}}__addEvents(){for(const tab of this.__tabs.values())tab.link.hasAttribute("disabled")||tab.link.addEventListener("click",tab.openTabHandler)}__removeEvents(){for(const tab of this.__tabs.values())tab.link.removeEventListener("click",tab.openTabHandler)}__findActiveTab(){let foundActiveTab=!1;for(const[tabName,tab]of this.__tabs)(tab.link.hasAttribute("active")||tab.content.hasAttribute("active"))&&(foundActiveTab?(tab.link.removeAttribute("active"),tab.content.removeAttribute("active")):(this.__activeTab=tabName,foundActiveTab=!0,tab.link.setAttribute("active",""),tab.content.setAttribute("active","")))}}Helpers.ContentTabs=ContentTabs,customElements.define("tchmi-content-tabs",ContentTabs)}(Controls.Helpers||(Controls.Helpers={}))}(TcHmi.Controls||(TcHmi.Controls={}))}(TcHmi||(TcHmi={}));